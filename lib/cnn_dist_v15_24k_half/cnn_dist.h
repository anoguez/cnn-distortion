#pragma once
#include <cnn_conv.h>

struct cnn_dist_v15_24k {

	static constexpr float w0[2][1][4] = {{{0.53995246,-1.3853773,-0.8901037,-0.09110626}},{{0.40864283,0.00449051,0.0037353009,0.3332226}}};
	static constexpr float b0[4] = {0.0,0.0,0.0,0.0};

	static constexpr float w1[2][4][4] = {{{-0.39975733,0.26750973,-0.011003408,0.049781997},{0.3933245,0.28803748,-0.17057796,0.10384045},{0.4453991,-0.059586417,0.14384001,0.10274371},{-0.30871016,0.16481136,0.33657342,-0.41384175}},{{-0.0308014,0.41092932,-0.112028144,-0.21213596},{0.0076433104,-0.6221406,0.95554674,0.99372214},{0.020687085,-0.37988472,1.0355413,0.85394096},{-0.24677776,0.06913526,-0.035899878,0.59198004}}};
	static constexpr float b1[4] = {0.0,0.0,0.0,0.0};

	static constexpr float w2[2][4][4] = {{{-0.0341508,-0.084292784,-0.21487561,-0.08071623},{0.3313265,0.22447503,-0.36746085,0.44578868},{-0.0843936,0.09199765,-0.28252712,-0.7653845},{-0.50925654,-0.53249353,0.23548928,-0.37093267}},{{-0.24869588,-0.33330244,0.0004061024,-0.5057462},{-0.26771906,-0.40270713,-0.62170374,-0.09780321},{0.55864304,0.44026154,0.94577694,-0.41111982},{0.6951455,0.27693826,0.7959741,-0.15929972}}};
	static constexpr float b2[4] = {0.0,0.0,0.0,0.0};

	static constexpr float w3[2][4][4] = {{{0.33915323,-0.111209415,-0.3024165,-0.13455336},{-0.23995773,-0.14859957,0.02275969,-0.1294748},{0.3790639,-0.014719671,-0.45758733,-0.5477213},{-0.15521775,-0.49105567,0.32827613,0.68813217}},{{-0.8696857,-0.42525366,0.680785,0.2997757},{-0.7095737,-0.56843966,0.3610793,0.31911755},{-0.44389164,-0.28104514,0.29387906,-0.3237794},{0.17022237,-0.047294546,-0.2329302,0.9814143}}};
	static constexpr float b3[4] = {0.0,0.0,0.0,0.0};

	static constexpr float w4[2][4][4] = {{{-0.677728,0.6188647,0.74027354,-0.6904063},{-0.244084,0.3013776,0.6632049,-0.13396235},{0.36326364,-0.81628805,-0.39383078,0.17787312},{-0.03323311,0.12885694,0.3866329,-0.2883853}},{{0.026624598,0.10430374,-0.320894,0.19980441},{0.26497573,0.026671024,0.4398676,0.07187795},{0.25094572,-0.23561168,0.34476227,0.13002054},{0.6858835,-0.41997987,-0.10846562,0.39045662}}};
	static constexpr float b4[4] = {0.0,0.0,0.0,0.0};

	static constexpr float w5[2][4][4] = {{{0.20422763,0.30124292,0.693769,-0.88814414},{0.24465077,-0.4350115,-0.42884076,0.61697686},{0.8872943,-0.1576168,-0.18318756,0.6544443},{0.0050445423,0.74121356,0.38252556,-0.77129847}},{{0.32453066,0.13740404,-0.21991411,-0.10067356},{-0.44028017,0.13703561,-0.30521053,0.18873243},{0.662978,-0.21455623,0.040375646,0.40554455},{0.017111655,-0.35998473,0.12158114,0.08842705}}};
	static constexpr float b5[4] = {0.0,0.0,0.0,0.0};

	static constexpr float w6[1][4][6] = {{{0.37053823,0.9886977,0.29072297,0.15046714,0.61803347,0.09393604},{-0.15250352,0.22390717,0.022976877,0.3751346,-0.5350952,-0.50272703},{-0.3824137,0.23664686,0.5433012,0.3694234,-0.055641145,-0.571276},{0.94650275,-0.21100335,-0.09960722,0.32923162,0.27043042,0.53349566}}};
	static constexpr float b6[6] = {0.5397877,0.15889171,0.0609053,-0.423901,-0.1884221,0.35232723};

	static constexpr float w7[1][6][6] = {{{-0.12385753,0.590693,-0.08014975,-0.23417638,0.043652933,0.5950715},{-0.056077123,-0.4020116,-0.21405792,0.43617588,-0.21990114,-0.26182365},{-0.0032281876,-0.053334136,-0.50205773,0.02401926,-0.19679072,-0.50037473},{-0.3500618,0.42821148,0.018061103,0.013069018,-0.05393514,-0.04838489},{0.08098781,-0.16486953,0.13599157,-0.087132215,0.24249817,-0.6013351},{-0.00010755658,0.46703756,0.31799275,-0.3891301,-0.27335402,0.18564512}}};
	static constexpr float b7[6] = {-0.29836437,0.0026992925,-0.23192418,0.49083412,-0.22559373,0.19569807};

	static constexpr float w8[1][6][6] = {{{0.082069814,0.1373753,0.044385612,0.114767134,0.18025774,0.33543515},{-0.15685573,0.48873115,-0.14924456,-0.009119256,-0.5471045,0.022184923},{0.2562684,-0.42175314,-0.15533629,-0.30812413,0.2756696,0.04140231},{0.40183473,-0.30126163,0.05292282,0.034240864,-0.30374238,-0.21740031},{0.26587445,0.28251678,-0.2729377,-0.2646321,-0.13862446,0.1372205},{-0.4265712,0.3349619,-0.43732613,-0.27873608,0.12407452,-0.21415146}}};
	static constexpr float b8[6] = {0.56141585,0.3027426,0.23977338,-0.33955467,0.2019642,-0.2925117};

	static constexpr float w9[1][6][6] = {{{0.32445577,-0.2523252,0.47878566,0.101405494,-0.28583235,-0.30876008},{-0.45276302,-0.16663402,-0.63526314,-0.27434713,0.44707876,0.43189508},{-0.045347165,-0.32171372,0.57114697,-0.34617022,-0.014114627,0.027774815},{-0.19381121,-0.31318384,-0.2127635,-0.005401167,0.20126325,-0.48382503},{-0.15805614,-0.064673215,-0.05585212,-0.3213014,-0.23100525,-0.058432084},{0.0963738,0.37745434,0.10156655,-0.36802244,-0.44253686,-0.40557387}}};
	static constexpr float b9[6] = {0.5906748,0.14842887,-0.06433108,-0.41491482,-0.026365204,0.24356522};

	static constexpr float w10[1][6][6] = {{{-0.105225645,0.40058255,-0.25078025,-0.30539298,-0.0017685475,-0.3283081},{-0.42534155,-0.21313274,-0.03737498,-0.1959192,0.053315997,0.16304362},{-0.27122432,0.41207856,-0.3208609,-0.19824924,-0.009072838,-0.03790292},{-0.15507615,0.18480736,0.09691727,-0.24932027,-0.36753356,-0.18981382},{0.3351778,-0.31431976,0.18559529,0.17715816,0.05631998,-0.2518859},{0.021615012,-0.32772043,0.20331669,0.28983447,-0.3022786,-0.0008378625}}};
	static constexpr float b10[6] = {0.09931652,0.54099816,-0.48960373,0.30729568,-0.101769954,-0.3917664};

	static constexpr float w11[1][6][6] = {{{0.30528075,0.45841137,-0.07844919,0.14056446,0.13085794,0.012889892},{-0.64062274,0.09618357,0.45724478,-0.11350636,0.4508361,0.09482659},{-0.16011533,0.12604143,-0.26429456,0.09196943,-0.36767012,-0.24239232},{0.0574388,0.0986869,-0.4649328,0.21850581,-0.81194794,-0.3524076},{0.03134724,0.22218376,0.4247572,0.24369378,-0.07410312,-0.08661494},{-0.3543973,0.2295919,0.32227373,0.13944441,-0.2078062,0.25237608}}};
	static constexpr float b11[6] = {0.4114706,-0.25860053,0.28816104,0.32152325,-0.29746374,-0.2747734};

	static constexpr float w12[1][6][4] = {{{-0.13348843,0.70373446,-0.048334803,0.43244874},{-0.10900083,-0.4594274,0.22953977,-0.23989145},{-0.5699309,-0.60389596,0.08228931,-0.16474484},{0.26731026,0.29382327,-0.16333543,0.36118355},{-0.0008525064,0.08382292,-1.1575114,-0.081319064},{0.0039136973,-0.11283458,0.27294493,-0.024899097}}};
	static constexpr float b12[4] = {0.07572035,0.01755533,0.19627514,-0.10314544};

	static constexpr float w13[2][4][4] = {{{-0.06449848,0.16851291,-0.17067496,-0.43641642},{0.22198375,0.13160557,-0.22835836,-0.13876392},{-0.14321996,0.15351677,-0.14183126,-0.26679462},{0.12975493,-0.015960038,-0.28928322,-0.46396714}},{{-0.17935625,-0.010912614,-0.17167047,-0.34696162},{-0.27313977,-0.5786343,-0.094106905,-0.1767109},{0.006510888,0.20809157,0.06856977,0.05202111},{-0.38663366,-0.38210028,0.17807968,0.12874345}}};
	static constexpr float b13[4] = {0.0,0.0,0.0,0.0};

	static constexpr float w14[2][4][4] = {{{-0.28454265,0.11340672,-0.19880465,-0.29579893},{-0.07183089,0.2641279,0.020829791,-0.07507775},{0.08225596,0.27414867,-0.31166327,-0.20153087},{-0.23195753,0.13535854,0.20128873,-0.19305846}},{{-0.15312538,-0.33614022,0.24030212,0.23853755},{-0.62741727,0.07882753,0.4744246,0.3865027},{0.13076454,-0.044735897,0.30797246,-0.18614279},{-0.32284975,0.48446375,0.17225595,-0.16561058}}};
	static constexpr float b14[4] = {0.0,0.0,0.0,0.0};

	static constexpr float w15[2][4][4] = {{{0.37454513,-0.043274887,-0.088076316,-0.03710001},{-0.31746918,0.13808128,0.29860988,-0.15684341},{-0.051032994,-0.22871676,-0.09666825,-0.14725772},{-0.018157227,0.096183844,-0.19324642,0.11686875}},{{-0.17130485,-0.39988586,0.19602297,0.27098906},{-0.2278864,0.26518345,0.26661336,-0.1607268},{0.030820867,0.47893417,-0.19136883,-0.8612464},{0.10456318,0.45173588,-0.38680178,-0.061873663}}};
	static constexpr float b15[4] = {0.0,0.0,0.0,0.0};

	static constexpr float w16[2][4][4] = {{{-0.10644051,0.20625965,0.03299445,-0.037142023},{-0.012645512,-0.21980995,-0.058500655,-0.3463786},{0.044173256,-0.02400809,-0.12875564,-0.09097879},{0.4020736,0.24873833,0.5274162,0.02838301}},{{0.49198437,0.07628455,0.1105874,0.25694934},{-0.36794093,0.25802273,0.49283502,0.49934757},{0.24729612,-0.15352707,-0.247472,-0.32085577},{0.32284245,-0.20240217,0.22324494,-0.33859593}}};
	static constexpr float b16[4] = {0.0,0.0,0.0,0.0};

	static constexpr float w17[2][4][1] = {{{0.19099121},{-0.29009652},{-0.04102526},{-0.45816255}},{{-0.18992361},{-0.14649995},{-0.13345334},{0.011194398}}};
	static constexpr float b17[1] = {-0.005933824};


	const static int latency = 188;
	const static int MAX_L = MAX_BUFFER + latency;
	const static int MAX_CH = 6;
	// About 1.2e-05*(MAX_BUFFER+2) MB of buffer
	float x_even[MAX_L][MAX_CH];
	float x_odd [MAX_L][MAX_CH];



	void operator()(float* x, float* y, int L) {

		if (L > MAX_L || L <= latency) {
			return;
		}

		for (int i = 0; i < L; i++) {
			x_odd[i][0] = x[i];
		}

		//conv_nb(w, b, xi, xo, inch, ouch, ksize, inst, oust, dilation, length, maxch)
		//nonlin(xi,ch,length,st)

		conv_nb(&w0, &b0, &x_odd, &x_even, 1, 1, 64, L-=64);
		conv_nb(&w1, &b1, &x_even, &x_odd, 1, 1, 32, L-=32);
		conv_nb(&w2, &b2, &x_odd, &x_even, 1, 1, 16, L-=16);
		conv_nb(&w3, &b3, &x_even, &x_odd, 1, 1, 8, L-=8);
		conv_nb(&w4, &b4, &x_odd, &x_even, 1, 1, 4, L-=4);
		conv_nb(&w5, &b5, &x_even, &x_odd, 1, 1, 2, L-=2);
		conv_nb(&w6, &b6, &x_odd, &x_even, 1, 1, 1, L-=0);
		relu(&x_even, 6, L, 1);
		conv_nb(&w7, &b7, &x_even, &x_odd, 1, 1, 1, L-=0);
		relu(&x_odd, 6, L, 1);
		conv_nb(&w8, &b8, &x_odd, &x_even, 1, 1, 1, L-=0);
		relu(&x_even, 6, L, 1);
		conv_nb(&w9, &b9, &x_even, &x_odd, 1, 1, 1, L-=0);
		relu(&x_odd, 6, L, 1);
		conv_nb(&w10, &b10, &x_odd, &x_even, 1, 1, 1, L-=0);
		relu(&x_even, 6, L, 1);
		conv_nb(&w11, &b11, &x_even, &x_odd, 1, 1, 1, L-=0);
		relu(&x_odd, 6, L, 1);
		conv_nb(&w12, &b12, &x_odd, &x_even, 1, 1, 1, L-=0);
		conv_nb(&w13, &b13, &x_even, &x_odd, 1, 1, 32, L-=32);
		conv_nb(&w14, &b14, &x_odd, &x_even, 1, 1, 16, L-=16);
		conv_nb(&w15, &b15, &x_even, &x_odd, 1, 1, 8, L-=8);
		conv_nb(&w16, &b16, &x_odd, &x_even, 1, 1, 4, L-=4);
		conv_nb(&w17, &b17, &x_even, &x_odd, 1, 1, 2, L-=2);

		// Copy result back to y
		for (int l = 0; l < L; l++) {
			y[l+latency] = x_odd[l][0];
		}
	}
};
