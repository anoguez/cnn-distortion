
extern "C" {
#include <cblas.h>
};

struct cnn_dist_v4 {
    const static int latency = 255;
    const static int MAX_L = 4351;
    // About 0.060914 MB of buffer
    float x_even[7][MAX_L];
    float x_odd [7][MAX_L];
    
    void operator()(float* x, float* y, int L) {
    
        // Ensure we don't segfault
        L = L > MAX_L ? MAX_L : L;
        
        for (int i = 0; i < L; i++) {
            x_odd[0][i] = x[i];
        }
        
    	// auto-generated code for layer layer_0: Conv1d(1, 7, kernel_size=(2,), stride=(1,), dilation=(256,))
    	const float w_layer_0[2][7][1] = {{{-2.121284008026123},{0.08508582413196564},{2.941816568374634},{-1.6023951768875122},{-1.357960820198059},{0.2379736304283142},{0.1014053076505661}},{{-0.07684570550918579},{0.2398986965417862},{0.007021287921816111},{-0.36116623878479004},{0.35117846727371216},{-0.059750381857156754},{0.01279369555413723}}};
    	const float b_layer_0[7] = {0.05942496284842491,-0.25892168283462524,0.10932694375514984,0.29800888895988464,0.21149158477783203,-0.36700698733329773,-0.3014267385005951};
    	
    	// Fill with biases for layer_0
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 128; l < L; l++) {
    	        x_even[i][l] = b_layer_0[i];
    	    }
    	}
    	
    	// Apply main filter for layer_0
    	// x_even[:,128:] = sum(w[k]@x_odd[:,128-(1-k)*128.0:L-(1-k)*128.0] for k in w.shape[0])
    	for (int k = 0; k < 2; k++) {
    	    int offset = (1-k)*128.0;
    	    cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 7, L-128, 1, 1.0, &w_layer_0[k][0][0], 1, &x_odd[0][128-offset], MAX_L, 1.0, &x_even[0][128], MAX_L);
    	}

    
    	// Rectified Linear Unit (ReLU)
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 128; l < L; l++) {
    	        x_even[i][l] = x_even[i][l] > 0 ? x_even[i][l] : 0;
    	    }
    	}

    
    	// auto-generated code for layer layer_1: Conv1d(7, 7, kernel_size=(2,), stride=(1,), dilation=(128,))
    	const float w_layer_1[2][7][7] = {{{-0.451382577419281,0.06962274014949799,0.3636399209499359,-0.33570191264152527,-0.20361489057540894,0.11326337605714798,-0.13308674097061157},{0.18341097235679626,0.04460878297686577,0.20976322889328003,-0.08377273380756378,-0.007584753911942244,-0.04383222386240959,0.013573098927736282},{0.3001827001571655,0.06202920898795128,0.5700719952583313,-0.4241327941417694,-0.08269812911748886,0.08253258466720581,0.13863612711429596},{-0.13293758034706116,0.012121873907744884,-0.06842279434204102,0.07393469661474228,-0.05459249019622803,0.12025409936904907,-0.0027625486254692078},{0.3573828339576721,0.00014776218449696898,-0.3723733723163605,0.46845313906669617,-0.005032581277191639,-0.002008655807003379,0.027882933616638184},{0.47713929414749146,-0.0054921600967645645,-0.45935550332069397,0.40288442373275757,0.19346792995929718,0.03047599084675312,0.020116189494729042},{-0.11976444721221924,-0.08043714612722397,0.037707746028900146,0.005734008736908436,0.12580257654190063,0.06272590905427933,0.014044728130102158}},{{0.4764189124107361,0.13598132133483887,-0.07578247040510178,0.14294369518756866,0.17046679556369781,-0.11718810349702835,0.043403491377830505},{0.10317094624042511,-0.00942948367446661,1.293591022491455,-0.3435106575489044,-0.6016100645065308,0.08639124780893326,0.08326645195484161},{0.6544165015220642,0.06312578171491623,0.024807287380099297,0.34882327914237976,0.1492084413766861,0.05103135481476784,0.04766153171658516},{0.7858759760856628,0.06101461127400398,-0.13678866624832153,0.3341781198978424,0.4406970739364624,-0.05951870605349541,0.04848959296941757},{0.807046115398407,-0.11528143286705017,-0.08843687921762466,0.1423720121383667,0.2749549448490143,-0.017197400331497192,0.10559104382991791},{-0.37573933601379395,0.12089014053344727,0.22555747628211975,-0.4047490060329437,-0.1478898525238037,0.03155731037259102,0.02891896665096283},{-0.1744888573884964,0.06638945639133453,-0.21123458445072174,-0.10160321742296219,0.05161963403224945,-0.08997002243995667,0.08721520751714706}}};
    	const float b_layer_1[7] = {0.08901574462652206,0.2362179458141327,-0.0713205486536026,-0.015945380553603172,-0.13029807806015015,0.08741286396980286,-0.1854017972946167};
    	
    	// Fill with biases for layer_1
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 192; l < L; l++) {
    	        x_odd[i][l] = b_layer_1[i];
    	    }
    	}
    	
    	// Apply main filter for layer_1
    	// x_odd[:,192:] = sum(w[k]@x_even[:,192-(1-k)*64.0:L-(1-k)*64.0] for k in w.shape[0])
    	for (int k = 0; k < 2; k++) {
    	    int offset = (1-k)*64.0;
    	    cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 7, L-192, 7, 1.0, &w_layer_1[k][0][0], 7, &x_even[0][192-offset], MAX_L, 1.0, &x_odd[0][192], MAX_L);
    	}

    
    	// Rectified Linear Unit (ReLU)
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 192; l < L; l++) {
    	        x_odd[i][l] = x_odd[i][l] > 0 ? x_odd[i][l] : 0;
    	    }
    	}

    
    	// auto-generated code for layer layer_2: Conv1d(7, 7, kernel_size=(2,), stride=(1,), dilation=(64,))
    	const float w_layer_2[2][7][7] = {{{0.4608891010284424,0.04029780253767967,0.5581451654434204,0.024251706898212433,0.005850327201187611,-0.5163539052009583,-0.06545762717723846},{0.0052184369415044785,-0.431946724653244,0.15485826134681702,0.38308921456336975,0.4011833667755127,-0.017091840505599976,-0.011892372742295265},{0.1598963439464569,0.35185450315475464,0.26571738719940186,-0.34127601981163025,-0.14073558151721954,0.04157183691859245,0.08818135410547256},{-0.05157683044672012,0.10016333311796188,-0.07692480087280273,0.04248763993382454,-0.12354015558958054,0.3634858727455139,-0.02185674197971821},{0.25530603528022766,-0.09289906173944473,0.13107481598854065,0.1948542445898056,-0.013612048700451851,-0.9794833064079285,0.1647861748933792},{0.037671610713005066,-0.06337673962116241,0.11973771452903748,0.1854952573776245,-0.20249736309051514,0.2294020801782608,-0.025509363040328026},{0.25934886932373047,0.48401662707328796,0.09945440292358398,-0.37379613518714905,-0.3705209493637085,-0.15505655109882355,-0.10257086157798767}},{{0.22107256948947906,0.18036523461341858,0.06307649612426758,0.09461238235235214,0.6183546185493469,0.07854865491390228,-0.0822712630033493},{-0.17449608445167542,0.5718254446983337,-0.16128163039684296,-0.16529221832752228,-0.05661971494555473,0.2547149956226349,0.13186627626419067},{-0.47912490367889404,-0.36374250054359436,-0.3119531571865082,0.030025919899344444,0.21504804491996765,-0.0716712549328804,-0.035238299518823624},{0.24591711163520813,-0.14917480945587158,0.5550355911254883,0.4603006839752197,0.2564408481121063,-0.1752840131521225,-0.09258987009525299},{-0.20922081172466278,0.2395336925983429,-0.39412784576416016,0.005005380138754845,-0.1933891326189041,-0.20491701364517212,0.06780841201543808},{0.0993206575512886,0.9501597881317139,-0.0989983081817627,-0.4029397666454315,-0.12867259979248047,0.2648778259754181,0.028799036517739296},{0.10541242361068726,0.3804011344909668,0.3840152621269226,-0.1454157680273056,-0.28231629729270935,-0.080420583486557,0.026070985943078995}}};
    	const float b_layer_2[7] = {0.06090470775961876,0.0964396595954895,0.039649903774261475,-0.009243653155863285,0.2168029248714447,0.2898581326007843,0.1862933486700058};
    	
    	// Fill with biases for layer_2
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 224; l < L; l++) {
    	        x_even[i][l] = b_layer_2[i];
    	    }
    	}
    	
    	// Apply main filter for layer_2
    	// x_even[:,224:] = sum(w[k]@x_odd[:,224-(1-k)*32.0:L-(1-k)*32.0] for k in w.shape[0])
    	for (int k = 0; k < 2; k++) {
    	    int offset = (1-k)*32.0;
    	    cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 7, L-224, 7, 1.0, &w_layer_2[k][0][0], 7, &x_odd[0][224-offset], MAX_L, 1.0, &x_even[0][224], MAX_L);
    	}

    
    	// Rectified Linear Unit (ReLU)
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 224; l < L; l++) {
    	        x_even[i][l] = x_even[i][l] > 0 ? x_even[i][l] : 0;
    	    }
    	}

    
    	// auto-generated code for layer layer_3: Conv1d(7, 7, kernel_size=(2,), stride=(1,), dilation=(32,))
    	const float w_layer_3[2][7][7] = {{{-0.10663415491580963,0.0504680797457695,0.03925738483667374,-0.024657772853970528,-0.10108640789985657,-0.048858240246772766,-0.002245113020762801},{0.025402992963790894,0.5416498184204102,-0.041461031883955,-0.5187583565711975,0.2890152335166931,0.5097888708114624,0.14862430095672607},{-0.32211124897003174,0.015119809657335281,0.6323668956756592,0.35397350788116455,-0.5381377935409546,0.08227098733186722,-0.04774847626686096},{0.3043860197067261,-0.14907823503017426,-0.3105071485042572,0.1267569214105606,0.5156861543655396,-0.08421601355075836,-0.37591463327407837},{-0.1673790067434311,0.21970117092132568,0.07377302646636963,-0.13872113823890686,-0.05117237567901611,0.2636304497718811,0.4347178339958191},{0.11675596982240677,-0.04248666390776634,0.19920727610588074,-0.20730029046535492,0.24362339079380035,0.3829485774040222,0.34576719999313354},{0.5788883566856384,-0.4311739206314087,-0.14724278450012207,0.1679086983203888,0.4594462215900421,-0.2846948206424713,0.13758571445941925}},{{-0.026598865166306496,-0.12174136191606522,0.05202171579003334,0.007657032459974289,0.09351199865341187,0.061574384570121765,-0.08845819532871246},{0.23108936846256256,0.46738192439079285,-0.4562515914440155,-0.23930372297763824,0.16852550208568573,-0.20232641696929932,-0.5619044303894043},{-0.2813642621040344,-0.36208784580230713,0.6200852990150452,0.2046048939228058,-0.03946221247315407,0.06739503145217896,-0.026262154802680016},{-0.012351611629128456,0.44530022144317627,-0.18278168141841888,-0.23649992048740387,0.3422812223434448,0.32564082741737366,0.06956655532121658},{-0.06617274880409241,-0.09527570754289627,0.09026206284761429,-0.07046151161193848,-0.16399557888507843,0.2347038835287094,0.4625641107559204},{0.23946037888526917,-0.583654522895813,0.5771913528442383,0.26042184233665466,-0.07416456937789917,-0.25963789224624634,0.01045228261500597},{-0.17155471444129944,-0.0071563515812158585,0.23429004848003387,-0.4268403649330139,0.1146051287651062,0.2596563994884491,0.13478736579418182}}};
    	const float b_layer_3[7] = {-0.11749200522899628,-0.0552317276597023,0.23735377192497253,-0.09190241247415543,0.2228916585445404,0.06383413821458817,0.1594599187374115};
    	
    	// Fill with biases for layer_3
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 240; l < L; l++) {
    	        x_odd[i][l] = b_layer_3[i];
    	    }
    	}
    	
    	// Apply main filter for layer_3
    	// x_odd[:,240:] = sum(w[k]@x_even[:,240-(1-k)*16.0:L-(1-k)*16.0] for k in w.shape[0])
    	for (int k = 0; k < 2; k++) {
    	    int offset = (1-k)*16.0;
    	    cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 7, L-240, 7, 1.0, &w_layer_3[k][0][0], 7, &x_even[0][240-offset], MAX_L, 1.0, &x_odd[0][240], MAX_L);
    	}

    
    	// Rectified Linear Unit (ReLU)
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 240; l < L; l++) {
    	        x_odd[i][l] = x_odd[i][l] > 0 ? x_odd[i][l] : 0;
    	    }
    	}

    
    	// auto-generated code for layer layer_4: Conv1d(7, 7, kernel_size=(2,), stride=(1,), dilation=(16,))
    	const float w_layer_4[2][7][7] = {{{0.02541228197515011,-0.24419696629047394,0.061733998358249664,-0.4311109781265259,0.00433708680793643,-0.12846416234970093,-0.40083226561546326},{-0.103936567902565,-0.06625755876302719,-0.5527129769325256,0.3419201970100403,0.09709111601114273,-0.5205345749855042,-0.22988615930080414},{-0.008200771175324917,0.3594358563423157,0.09014707803726196,0.0019166519632562995,-0.07697904109954834,0.16470621526241302,0.13526956737041473},{0.056890543550252914,0.015875721350312233,0.11398304253816605,-0.026181260123848915,0.20929855108261108,-0.27934831380844116,-0.16344529390335083},{-0.04112251475453377,0.03426777943968773,0.1890338808298111,0.48587852716445923,0.2737574577331543,-0.7485731244087219,0.45416903495788574},{-0.13753904402256012,0.5683168172836304,0.4079917371273041,-0.11927805840969086,0.03018736094236374,0.09175444394350052,-0.3037911653518677},{-0.13142003118991852,0.036594208329916,-0.08523134142160416,0.04946573078632355,-0.5714340806007385,-0.4954935312271118,0.08845667541027069}},{{0.14498619735240936,0.21977722644805908,-0.1486717015504837,-0.08346525579690933,0.3297976553440094,-0.1624799370765686,-0.21070711314678192},{-0.13606683909893036,0.5230758786201477,-0.06031201407313347,0.14729635417461395,0.0015215434832498431,-0.05883453041315079,-0.2290240228176117},{-0.05341995507478714,-0.0595456063747406,0.1550227403640747,0.2076234519481659,-0.5696178674697876,0.11008188128471375,0.16850866377353668},{-0.05502742528915405,-0.10555145889520645,-0.18176592886447906,-0.15311141312122345,0.1377718150615692,0.1483532041311264,-0.37054362893104553},{0.018520943820476532,0.07822276651859283,-0.07055358588695526,0.20870649814605713,-0.2608453333377838,-0.06298883259296417,-0.051411278545856476},{0.13820378482341766,0.0021095748525112867,0.1280324012041092,-0.035281214863061905,0.03489833325147629,-0.24671107530593872,0.11881070584058762},{-0.0481601282954216,1.0064564943313599,-0.036377254873514175,0.06225285679101944,0.5350369215011597,0.2469388246536255,-0.33738115429878235}}};
    	const float b_layer_4[7] = {0.13191892206668854,-0.04805007949471474,0.008258056826889515,0.17033474147319794,-0.007980582304298878,0.13571204245090485,0.052843477576971054};
    	
    	// Fill with biases for layer_4
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 248; l < L; l++) {
    	        x_even[i][l] = b_layer_4[i];
    	    }
    	}
    	
    	// Apply main filter for layer_4
    	// x_even[:,248:] = sum(w[k]@x_odd[:,248-(1-k)*8.0:L-(1-k)*8.0] for k in w.shape[0])
    	for (int k = 0; k < 2; k++) {
    	    int offset = (1-k)*8.0;
    	    cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 7, L-248, 7, 1.0, &w_layer_4[k][0][0], 7, &x_odd[0][248-offset], MAX_L, 1.0, &x_even[0][248], MAX_L);
    	}

    
    	// Rectified Linear Unit (ReLU)
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 248; l < L; l++) {
    	        x_even[i][l] = x_even[i][l] > 0 ? x_even[i][l] : 0;
    	    }
    	}

    
    	// auto-generated code for layer layer_5: Conv1d(7, 7, kernel_size=(2,), stride=(1,), dilation=(8,))
    	const float w_layer_5[2][7][7] = {{{-0.28064438700675964,0.3812815845012665,0.0935072973370552,0.005804949440062046,0.3734845221042633,0.29303959012031555,-0.11344193667173386},{-0.22651544213294983,-0.06544491648674011,0.4327108860015869,0.10620342940092087,0.46178069710731506,-0.26415178179740906,-0.1724352240562439},{0.21787582337856293,0.1684826910495758,0.04810784012079239,-0.10650867223739624,0.29099029302597046,-0.1527547687292099,0.3349083364009857},{0.1068534180521965,0.012148164212703705,0.05632037669420242,-0.18245293200016022,-0.5999290347099304,0.07844863086938858,-0.1417306661605835},{0.11200733482837677,-0.6175930500030518,-0.05350368842482567,0.029704349115490913,-0.46724462509155273,0.25034669041633606,0.39961010217666626},{0.3039587736129761,0.11390950530767441,-0.0714770182967186,0.337259441614151,-0.32722002267837524,0.13497625291347504,0.43397659063339233},{0.274228572845459,-0.4418671727180481,0.1760602593421936,-0.06891381740570068,-0.7008168697357178,0.42647290229797363,0.10307300835847855}},{{-0.12705393135547638,-0.11263955384492874,0.16387705504894257,0.22272399067878723,-0.18294085562229156,0.17427243292331696,-0.07759520411491394},{0.1891956329345703,-0.3865032196044922,-0.08125784993171692,0.10435005277395248,0.18460029363632202,-0.12878113985061646,0.35096827149391174},{-0.18972253799438477,-0.03442997857928276,0.11772868782281876,-0.25015032291412354,-0.0605483315885067,0.06936196982860565,0.3271445631980896},{0.1828591227531433,-0.7165914177894592,-0.32911399006843567,-0.04665720835328102,0.07179362326860428,-0.14857186377048492,0.5733922719955444},{-0.157172292470932,-0.12073347717523575,0.2585808038711548,0.16760776937007904,0.2951546609401703,0.14538545906543732,-0.478171169757843},{0.17331713438034058,0.33943918347358704,-0.167426198720932,0.19628968834877014,0.06627170741558075,-0.05212055891752243,0.14719031751155853},{0.0571138970553875,0.4033161699771881,-0.2681008577346802,0.08537264913320541,-0.1690840870141983,0.16126292943954468,-0.1935124546289444}}};
    	const float b_layer_5[7] = {-0.20798704028129578,0.047295790165662766,-0.2876046299934387,0.15710972249507904,-0.0016372709069401026,0.06476546823978424,-0.03354324772953987};
    	
    	// Fill with biases for layer_5
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 252; l < L; l++) {
    	        x_odd[i][l] = b_layer_5[i];
    	    }
    	}
    	
    	// Apply main filter for layer_5
    	// x_odd[:,252:] = sum(w[k]@x_even[:,252-(1-k)*4.0:L-(1-k)*4.0] for k in w.shape[0])
    	for (int k = 0; k < 2; k++) {
    	    int offset = (1-k)*4.0;
    	    cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 7, L-252, 7, 1.0, &w_layer_5[k][0][0], 7, &x_even[0][252-offset], MAX_L, 1.0, &x_odd[0][252], MAX_L);
    	}

    
    	// Rectified Linear Unit (ReLU)
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 252; l < L; l++) {
    	        x_odd[i][l] = x_odd[i][l] > 0 ? x_odd[i][l] : 0;
    	    }
    	}

    
    	// auto-generated code for layer layer_6: Conv1d(7, 7, kernel_size=(2,), stride=(1,), dilation=(4,))
    	const float w_layer_6[2][7][7] = {{{0.3038474917411804,0.34927165508270264,0.21130748093128204,0.05849474295973778,-0.3061460554599762,0.06221317872405052,-0.3476864695549011},{-0.34233883023262024,-0.2776056230068207,-0.24773448705673218,0.14777734875679016,0.38781043887138367,0.3206217586994171,0.17323748767375946},{-0.019483130425214767,-0.024322010576725006,0.2563023865222931,-0.126759335398674,0.3201504945755005,-0.018088966608047485,0.18237566947937012},{-0.20173905789852142,-0.28614622354507446,-0.356450617313385,-0.05795134976506233,-0.12212526053190231,0.1271594911813736,-0.50359708070755},{-0.3842364251613617,-0.2510618567466736,-0.3196977972984314,0.18516798317432404,0.297933429479599,0.18666009604930878,0.16977697610855103},{-0.11695486307144165,-0.2797083258628845,-0.009310614317655563,0.5574305653572083,0.560981810092926,-0.0037314847577363253,0.19566915929317474},{-0.06683052331209183,0.2041698694229126,-0.22425274550914764,-0.34788018465042114,-0.4387032687664032,-0.20471352338790894,0.06636183708906174}},{{-0.4140067994594574,-0.45829200744628906,0.032907288521528244,0.2459212839603424,-0.13786408305168152,0.10244295746088028,0.1676786243915558},{-0.06474373489618301,-0.025768721476197243,0.03352350741624832,-0.35899117588996887,0.2561721205711365,0.1666470766067505,0.30963483452796936},{-0.025912079960107803,-0.04354001209139824,0.025340493768453598,-0.12875115871429443,0.15393470227718353,0.13366323709487915,0.014992811717092991},{0.023147428408265114,-0.8328714370727539,-0.4846702814102173,0.1435045599937439,0.21931354701519012,0.19439822435379028,0.29414936900138855},{0.003375121857970953,-0.22115641832351685,0.04698781669139862,-0.20411352813243866,0.4380400776863098,-0.1846032738685608,-0.09430210292339325},{-0.11535750329494476,0.13422377407550812,-0.06401479244232178,0.11711389571428299,-0.020788582041859627,-0.4505225121974945,-0.17648494243621826},{-0.01145876757800579,0.3303126394748688,-0.5043388605117798,0.07576485723257065,-0.6529393196105957,-0.14686903357505798,0.36624112725257874}}};
    	const float b_layer_6[7] = {-0.10949546098709106,0.13548347353935242,-0.3164646327495575,-0.039523106068372726,0.2009798288345337,-0.05826146900653839,0.051375679671764374};
    	
    	// Fill with biases for layer_6
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 254; l < L; l++) {
    	        x_even[i][l] = b_layer_6[i];
    	    }
    	}
    	
    	// Apply main filter for layer_6
    	// x_even[:,254:] = sum(w[k]@x_odd[:,254-(1-k)*2.0:L-(1-k)*2.0] for k in w.shape[0])
    	for (int k = 0; k < 2; k++) {
    	    int offset = (1-k)*2.0;
    	    cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 7, L-254, 7, 1.0, &w_layer_6[k][0][0], 7, &x_odd[0][254-offset], MAX_L, 1.0, &x_even[0][254], MAX_L);
    	}

    
    	// Rectified Linear Unit (ReLU)
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 254; l < L; l++) {
    	        x_even[i][l] = x_even[i][l] > 0 ? x_even[i][l] : 0;
    	    }
    	}

    
    	// auto-generated code for layer layer_7: Conv1d(7, 7, kernel_size=(2,), stride=(1,), dilation=(2,))
    	const float w_layer_7[2][7][7] = {{{0.1565569043159485,-0.14558206498622894,-0.1413622498512268,0.3179912865161896,-0.29931536316871643,-0.5253274440765381,0.5293998122215271},{-0.2853313684463501,0.3414051830768585,-0.46513140201568604,0.23811183869838715,0.21861247718334198,0.15269583463668823,-0.2735000252723694},{-0.33011162281036377,0.037419870495796204,0.07200682163238525,0.341455340385437,-0.25053173303604126,0.20123590528964996,0.196891650557518},{0.17775306105613708,-0.0006762526463717222,0.04334370046854019,0.1611211895942688,-0.5004808306694031,-0.15056957304477692,-0.2784382998943329},{-0.43504849076271057,0.3318445682525635,-0.44792479276657104,0.21527142822742462,0.1852177083492279,0.04688061773777008,-0.2678106427192688},{-0.04051895812153816,0.2182300090789795,-0.25599148869514465,0.40516790747642517,0.1035667210817337,0.08375296741724014,-0.05250228941440582},{-0.07699789851903915,-0.2925775647163391,-0.3309909701347351,0.1122637465596199,-0.2501579821109772,-0.41258880496025085,0.34668412804603577}},{{-0.14050668478012085,-0.04539161175489426,-0.0671662911772728,0.2592262029647827,-0.17434589564800262,0.0795343816280365,0.3608166575431824},{0.18443283438682556,0.23567572236061096,-0.012266425415873528,0.2134125977754593,0.17012351751327515,-0.4383745491504669,-0.03338148072361946},{-0.08113333582878113,0.16247409582138062,0.00168331665918231,0.3737092614173889,0.051448795944452286,0.2764023244380951,0.010550483129918575},{-0.14531485736370087,0.1650412380695343,-0.015738049522042274,0.32897499203681946,-0.41068339347839355,0.13304166495800018,-0.5104078650474548},{-0.08789245039224625,0.08633469045162201,-0.11802304536104202,0.2809886634349823,0.10079753398895264,-0.3410741686820984,0.06478269398212433},{0.199918732047081,0.21151523292064667,-0.0641089454293251,0.15793532133102417,0.3066538870334625,-0.22611932456493378,-0.18099936842918396},{-0.3465118706226349,-0.015767186880111694,-0.35762134194374084,0.0108726117759943,-0.02115662954747677,0.08784778416156769,0.23222044110298157}}};
    	const float b_layer_7[7] = {0.2481410652399063,0.0705810934305191,-0.27439990639686584,0.1206139624118805,0.013241767883300781,0.07824479043483734,0.19470490515232086};
    	
    	// Fill with biases for layer_7
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 255; l < L; l++) {
    	        x_odd[i][l] = b_layer_7[i];
    	    }
    	}
    	
    	// Apply main filter for layer_7
    	// x_odd[:,255:] = sum(w[k]@x_even[:,255-(1-k)*1.0:L-(1-k)*1.0] for k in w.shape[0])
    	for (int k = 0; k < 2; k++) {
    	    int offset = (1-k)*1.0;
    	    cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 7, L-255, 7, 1.0, &w_layer_7[k][0][0], 7, &x_even[0][255-offset], MAX_L, 1.0, &x_odd[0][255], MAX_L);
    	}

    
    	// Rectified Linear Unit (ReLU)
    	for (int i = 0; i < 7; i++) {
    	    for (int l = 255; l < L; l++) {
    	        x_odd[i][l] = x_odd[i][l] > 0 ? x_odd[i][l] : 0;
    	    }
    	}

    
    	// auto-generated code for layer layer_8: Conv1d(7, 1, kernel_size=(1,), stride=(1,))
    	const float w_layer_8[1][1][7] = {{{0.47373923659324646,-0.21336515247821808,0.3601190149784088,0.3189307153224945,-0.2501917779445648,-0.2435602992773056,0.18237079679965973}}};
    	const float b_layer_8[1] = {0.1032189279794693};
    	
    	// Fill with biases for layer_8
    	for (int i = 0; i < 1; i++) {
    	    for (int l = 255; l < L; l++) {
    	        x_even[i][l] = b_layer_8[i];
    	    }
    	}
    	
    	// Apply main filter for layer_8
    	// x_even[:,255:] = sum(w[k]@x_odd[:,255-(0-k)*0.5:L-(0-k)*0.5] for k in w.shape[0])
    	for (int k = 0; k < 1; k++) {
    	    int offset = (0-k)*0.5;
    	    cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 1, L-255, 7, 1.0, &w_layer_8[k][0][0], 7, &x_odd[0][255-offset], MAX_L, 1.0, &x_even[0][255], MAX_L);
    	}

    
        // Copy result back to y
        for (int l = 255; l < L; l++) {
            y[l] = x_even[0][l];
        }
    }
};
    