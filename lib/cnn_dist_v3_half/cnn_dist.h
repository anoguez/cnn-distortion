
extern "C" {
#include <cblas.h>
};

#include <cmath>

struct cnn_dist_v3 {
	const static int latency = 255;
	const static int MAX_L = MAX_BUFFER + latency;
	// About 2e-05*(MAX_BUFFER+255) MB of buffer
	float x_even[10][MAX_L];
	float x_odd [10][MAX_L];

	void operator()(float* x, float* y, int L) {

		// Ensure we don't segfault
		L = L > MAX_L ? MAX_L : L;

		for (int i = 0; i < L; i++) {
			x_odd[0][i] = x[i];
		}

		// auto-generated code for layer layer_0: Conv1d(1, 10, kernel_size=(2,), stride=(1,), dilation=(256,))
		const float w_layer_0[2][10][1] = {{{-1.5692033767700195},{1.787712812423706},{1.4914125204086304},{-1.34391450881958},{-0.3111129403114319},{-1.5686689615249634},{-0.06991369277238846},{2.0899429321289062},{-2.0619797706604004},{-1.138037085533142}},{{-0.7787920832633972},{0.09699809551239014},{-0.11870404332876205},{0.09131476283073425},{0.9160698056221008},{-0.16964352130889893},{0.03579532727599144},{0.0855700820684433},{0.6765398383140564},{0.18563444912433624}}};
		const float b_layer_0[10] = {0.08168215304613113,0.1236368864774704,0.416122168302536,0.16531933844089508,-0.059751369059085846,-0.06261551380157471,-0.3288020193576813,0.07223565131425858,0.03706849738955498,0.31446385383605957};

		// Fill with biases for layer_0
		for (int i = 0; i < 10; i++) {
			for (int l = 128; l < L; l++) {
				x_even[i][l] = b_layer_0[i];
			}
		}

		// Apply main filter for layer_0
		// x_even[:,128:] = sum(w[k]@x_odd[:,128-(1-k)*128:L-(1-k)*128] for k in w.shape[0])
		for (int k = 0; k < 2; k++) {
			int offset = (1-k)*128;
			cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 10, L-128, 1, 1.0, &w_layer_0[k][0][0], 1, &x_odd[0][128-offset], MAX_L, 1.0, &x_even[0][128], MAX_L);
		}


		// Rectified Linear Unit (ReLU)
		for (int i = 0; i < 10; i++) {
			for (int l = 128; l < L; l++) {
				x_even[i][l] = x_even[i][l] > 0 ? x_even[i][l] : 0;
			}
		}


		// auto-generated code for layer layer_1: Conv1d(10, 10, kernel_size=(2,), stride=(1,), dilation=(128,))
		const float w_layer_1[2][10][10] = {{{0.07207834720611572,-0.03664737567305565,0.052412960678339005,-0.07761310040950775,-0.11080531775951385,-0.10504894703626633,-0.05766623094677925,-0.08799154311418533,-0.04017672315239906,0.07281330227851868},{-0.34894901514053345,-0.07558905333280563,-0.09680896252393723,-0.04498647525906563,0.20090407133102417,-0.3066116273403168,0.027542268857359886,0.10278202593326569,0.12329019606113434,-0.045730266720056534},{0.09367918968200684,-0.04486088827252388,-0.014688550494611263,-0.05059836432337761,-0.08580278605222702,0.20830924808979034,-0.049672625958919525,-0.10680051147937775,-0.00689237006008625,-0.008691593073308468},{-0.09646454453468323,0.007359958253800869,-0.0990227460861206,-0.01635962724685669,-0.12020502984523773,-0.03551381081342697,-0.012043977156281471,0.08675385266542435,0.0628904476761818,-0.02051115594804287},{-0.6222926378250122,0.5830032825469971,0.22102341055870056,-0.34564095735549927,0.5605229139328003,1.0718095302581787,-0.01564382016658783,0.929555356502533,0.014750609174370766,-0.25487831234931946},{-0.18354356288909912,0.07090505957603455,-0.16022370755672455,0.11220034956932068,-0.2824547588825226,-0.07570304721593857,0.10479104518890381,0.09964288771152496,-0.005647073965519667,0.13330748677253723},{0.016687704250216484,-0.06958432495594025,-0.073647640645504,0.02205069735646248,0.08163254708051682,-0.046189889311790466,-0.01074172928929329,0.03189421445131302,-0.09239094704389572,-0.07227165997028351},{0.029052620753645897,0.1027645543217659,0.21485678851604462,-0.03138472139835358,0.358631432056427,-0.07690249383449554,0.11505944281816483,0.18088027834892273,-0.32510823011398315,-0.10685379058122635},{0.7465530633926392,-0.4906206429004669,-0.23008248209953308,0.3221115469932556,-0.12959912419319153,1.2515277862548828,0.06092369556427002,-0.09576702117919922,0.23706990480422974,0.2834094762802124},{0.28540951013565063,0.08052743226289749,0.14252988994121552,-0.056791726499795914,0.17913946509361267,0.2538294792175293,0.03980669006705284,-0.049921050667762756,-0.1993170976638794,-0.025618109852075577}},{{0.023477250710129738,-0.0992654338479042,-0.10676126927137375,0.050652362406253815,-0.08601615577936172,-0.032606758177280426,0.08471903204917908,-0.03477150946855545,-0.042400479316711426,-0.13258987665176392},{-0.04742039367556572,0.17790792882442474,0.317840576171875,-0.312794029712677,-0.5601375102996826,0.11484226584434509,0.07921504974365234,0.49350646138191223,0.7238022089004517,-0.34027647972106934},{0.22044065594673157,-0.02643940970301628,-0.46503400802612305,0.43208056688308716,-0.11962824314832687,1.0405610799789429,-0.04763786494731903,0.12595652043819427,0.9347266554832458,0.43237242102622986},{-0.09457582980394363,-0.03980611264705658,-0.06951262056827545,0.029582804068922997,0.034710101783275604,0.062184859067201614,0.08962870389223099,0.05089554563164711,-0.11142251640558243,-0.10231608897447586},{0.09404495358467102,-0.15038767457008362,-0.001562508405186236,0.09538435190916061,0.3660668432712555,0.054899364709854126,-0.0485338531434536,-0.1731921285390854,0.2756218910217285,0.07918892800807953},{0.09596684575080872,0.5033078789710999,0.29650187492370605,0.0025108852423727512,0.1720006912946701,-0.19809207320213318,-0.07302416861057281,0.6924571990966797,0.06624364107847214,-0.3686075210571289},{0.040270812809467316,0.024117544293403625,-0.10311949998140335,-0.1082683876156807,-0.011410257779061794,0.0036523155868053436,-0.022839022800326347,-0.10566170513629913,-0.02270893007516861,-0.07192467898130417},{0.1351321041584015,-0.011162441223859787,-0.09864123165607452,0.12875019013881683,-0.26096275448799133,0.3088282346725464,-0.0745236948132515,0.08524923771619797,0.07319352775812149,0.2965506315231323},{0.025993501767516136,-0.004295853432267904,0.034920576959848404,0.09016585350036621,-0.6083645820617676,-0.8831350803375244,0.03366541862487793,0.014728493988513947,-0.00034071426489390433,0.10009489208459854},{-0.12858106195926666,0.3713081181049347,0.37613075971603394,-0.19372732937335968,0.14442388713359833,-0.29945600032806396,-0.09106674790382385,0.8620796799659729,0.4486464560031891,-0.23314906656742096}}};
		const float b_layer_1[10] = {-0.05776494741439819,0.05648824945092201,0.037145353853702545,0.036010585725307465,0.04085493087768555,0.07511714100837708,0.06660918146371841,0.049298230558633804,-0.07950961589813232,0.12303144484758377};

		// Fill with biases for layer_1
		for (int i = 0; i < 10; i++) {
			for (int l = 192; l < L; l++) {
				x_odd[i][l] = b_layer_1[i];
			}
		}

		// Apply main filter for layer_1
		// x_odd[:,192:] = sum(w[k]@x_even[:,192-(1-k)*64:L-(1-k)*64] for k in w.shape[0])
		for (int k = 0; k < 2; k++) {
			int offset = (1-k)*64;
			cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 10, L-192, 10, 1.0, &w_layer_1[k][0][0], 10, &x_even[0][192-offset], MAX_L, 1.0, &x_odd[0][192], MAX_L);
		}


		// Rectified Linear Unit (ReLU)
		for (int i = 0; i < 10; i++) {
			for (int l = 192; l < L; l++) {
				x_odd[i][l] = x_odd[i][l] > 0 ? x_odd[i][l] : 0;
			}
		}


		// auto-generated code for layer layer_2: Conv1d(10, 10, kernel_size=(2,), stride=(1,), dilation=(64,))
		const float w_layer_2[2][10][10] = {{{-0.025505511090159416,-0.3534095883369446,0.14284007251262665,-0.008112842217087746,0.1074940413236618,-0.22885948419570923,0.079572893679142,0.14083951711654663,-0.44679227471351624,-0.09914755076169968},{-0.058209002017974854,0.02863144502043724,0.23186752200126648,0.03321582078933716,0.46763089299201965,-0.15572573244571686,-0.031566500663757324,0.2859202027320862,-0.48497018218040466,-0.06202934309840202},{0.10327183455228806,-0.03024633787572384,-0.20317181944847107,-0.018335528671741486,0.36430293321609497,-0.13063614070415497,-0.0576576292514801,0.16379812359809875,-0.5497018098831177,0.27048051357269287},{-0.11203353106975555,0.0039824130944907665,-0.020504623651504517,0.09625385701656342,-0.05748618766665459,0.028795264661312103,-0.04962814226746559,-0.08537089079618454,0.025103095918893814,-0.05857014283537865},{-0.03328565135598183,0.20540089905261993,0.07808791846036911,-0.027381937950849533,0.11236967891454697,0.21495506167411804,-0.08346850425004959,0.025150232017040253,0.3820793330669403,0.3077663779258728},{-0.019875235855579376,0.13704277575016022,-0.06746277213096619,0.061485204845666885,0.09938402473926544,0.17465698719024658,0.06321711838245392,-0.014151674695312977,0.12344276905059814,0.3074859082698822},{-0.06405256688594818,0.2651965916156769,-0.07593057304620743,0.028776660561561584,-0.0909552276134491,0.07790260016918182,-0.04704350233078003,-0.32010704278945923,0.14546047151088715,0.2119358330965042},{-0.09144651889801025,0.1260431855916977,-0.801134467124939,0.07487589865922928,0.5882463455200195,0.06232764571905136,0.03484463319182396,0.025051584467291832,-0.239139586687088,-0.07732363045215607},{0.08819764107465744,-0.12896043062210083,0.5001319050788879,0.044617149978876114,-0.05383356288075447,-0.1912054717540741,-0.011440894566476345,0.20886220037937164,0.338159441947937,-0.2590869069099426},{0.10394421964883804,-0.20888546109199524,0.05041063204407692,0.06835689395666122,-0.6696809530258179,-0.011849787086248398,-0.016491033136844635,-0.054676592350006104,0.019514404237270355,-0.26270246505737305}},{{-0.09340627491474152,0.11147651076316833,-0.19557355344295502,0.07740654051303864,0.434052437543869,0.1539880633354187,0.08280625939369202,0.1452171504497528,-0.3489318788051605,-0.15630218386650085},{0.012778178788721561,0.17964524030685425,0.03935318812727928,-0.09697316586971283,0.05471506342291832,0.01488570123910904,0.05715524032711983,-0.08242148160934448,0.03055180236697197,0.011852932162582874},{-0.02235155552625656,0.049910567700862885,0.058822330087423325,-0.058833349496126175,-0.27503615617752075,0.01713489554822445,0.015627048909664154,-0.2626659870147705,0.2875465154647827,-0.16941773891448975},{0.039534687995910645,-0.01177280768752098,-0.0215368140488863,-0.10766805708408356,-0.08434811234474182,-0.036082878708839417,-0.09699142724275589,0.07555799931287766,-0.09548792988061905,0.019079256802797318},{0.09172919392585754,-0.09012271463871002,0.7348315715789795,-0.06086862087249756,0.11081735789775848,-0.08700567483901978,0.11143873631954193,0.04860839247703552,0.04014484956860542,-0.20042556524276733},{0.07888029515743256,0.2985037565231323,-0.18561075627803802,0.029051024466753006,0.02151714451611042,0.6582693457603455,-0.11384173482656479,-0.03239329904317856,0.055467862635850906,0.4585769772529602},{0.025700615718960762,0.26608821749687195,-0.07679910957813263,0.08507996797561646,0.11292361468076706,0.001982799731194973,0.008863159455358982,0.05474427342414856,-0.43779876828193665,0.13439026474952698},{-0.07220428436994553,0.07953795045614243,-0.317137748003006,0.10606161504983902,0.10059558600187302,0.10517396032810211,0.055362556129693985,0.1577826291322708,-1.1099451780319214,-0.0009381221607327461},{-0.10313121229410172,0.3194506764411926,0.09992046654224396,-0.012706608511507511,-0.13685831427574158,0.29172226786613464,-0.0754714235663414,-0.0658206194639206,0.11153730750083923,0.2880147397518158},{0.04222070425748825,-0.02487843856215477,-0.24526190757751465,0.002426569117233157,0.3348725140094757,-0.06516758352518082,-0.07885650545358658,0.4456613063812256,0.09293576329946518,0.29533302783966064}}};
		const float b_layer_2[10] = {-0.059549786150455475,0.07702858746051788,-0.0347772054374218,-0.057316217571496964,-0.009657359682023525,0.21797524392604828,0.14237454533576965,-0.11271154880523682,0.16673828661441803,-0.06667779386043549};

		// Fill with biases for layer_2
		for (int i = 0; i < 10; i++) {
			for (int l = 224; l < L; l++) {
				x_even[i][l] = b_layer_2[i];
			}
		}

		// Apply main filter for layer_2
		// x_even[:,224:] = sum(w[k]@x_odd[:,224-(1-k)*32:L-(1-k)*32] for k in w.shape[0])
		for (int k = 0; k < 2; k++) {
			int offset = (1-k)*32;
			cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 10, L-224, 10, 1.0, &w_layer_2[k][0][0], 10, &x_odd[0][224-offset], MAX_L, 1.0, &x_even[0][224], MAX_L);
		}


		// Rectified Linear Unit (ReLU)
		for (int i = 0; i < 10; i++) {
			for (int l = 224; l < L; l++) {
				x_even[i][l] = x_even[i][l] > 0 ? x_even[i][l] : 0;
			}
		}


		// auto-generated code for layer layer_3: Conv1d(10, 10, kernel_size=(2,), stride=(1,), dilation=(32,))
		const float w_layer_3[2][10][10] = {{{0.4426642060279846,-0.25462764501571655,0.4706203043460846,-0.09909847378730774,0.10079813748598099,0.17738699913024902,0.16363388299942017,0.0825304388999939,0.10839718580245972,-0.24429824948310852},{-0.3072781562805176,0.4572887420654297,-0.31995007395744324,0.003231346607208252,-0.17524172365665436,0.4913066327571869,-0.17782190442085266,0.1919717937707901,-0.11338216811418533,0.2253480702638626},{0.3354240357875824,-0.31650102138519287,0.37941646575927734,-0.06499910354614258,-0.06234123185276985,0.22644951939582825,0.14109040796756744,-0.40041887760162354,0.20933417975902557,-0.3742723762989044},{-0.3467664420604706,0.09218932688236237,-0.09706990420818329,0.04895075783133507,-0.4921058118343353,0.04907926917076111,0.12906067073345184,0.0653868243098259,0.3401695191860199,0.09042587876319885},{-0.04093177989125252,0.0753079503774643,0.03889738395810127,0.07483436167240143,-0.16723637282848358,0.2682824730873108,0.048007506877183914,0.18955275416374207,-0.08747049421072006,0.38388654589653015},{0.1916721910238266,-0.5880826115608215,-1.7554960250854492,0.008660630322992802,-0.12482066452503204,-0.004846648313105106,0.3922015428543091,-0.4659994840621948,-0.17445510625839233,-0.3760612905025482},{0.10129848122596741,-0.06334320455789566,0.16500677168369293,0.015349569730460644,-0.42831262946128845,0.2751188278198242,-0.005748241674154997,0.16688211262226105,0.42519333958625793,-0.009531647898256779},{-0.19524861872196198,0.35970184206962585,-0.02866305038332939,-0.010955817997455597,0.13655172288417816,-0.18962843716144562,-0.10982698947191238,0.5117759704589844,0.0522899404168129,0.4756452143192291},{-0.1636948436498642,0.18211114406585693,-0.12670575082302094,0.1108357161283493,-0.1378922015428543,0.28468766808509827,-0.029749898239970207,0.1358550786972046,-0.07931219786405563,0.4575076699256897},{-0.18537971377372742,-0.22533129155635834,-0.2261602282524109,-0.09472440183162689,-0.12735310196876526,0.1745346188545227,0.17718836665153503,-0.0761735588312149,0.3538515865802765,-0.3334653675556183}},{{0.3244495391845703,-0.23286913335323334,0.4539543688297272,0.016590114682912827,0.09602575749158859,-0.07534271478652954,0.31392401456832886,0.11351542174816132,-0.25075510144233704,-0.3354119658470154},{-0.20507526397705078,0.16407783329486847,-0.3373663127422333,0.10202210396528244,0.13376501202583313,-0.06741822510957718,-0.18479716777801514,0.05169731006026268,-0.2076771855354309,0.025456547737121582},{0.33385565876960754,-0.06837216019630432,0.05572400987148285,0.07864485681056976,0.09745091199874878,-0.2115367203950882,0.08230666071176529,0.054296694695949554,0.09840305894613266,-0.04285219684243202},{-0.07725370675325394,0.13814593851566315,-0.3281126320362091,0.03074829839169979,-0.09991692751646042,-0.14073659479618073,-0.2711407244205475,0.14220641553401947,0.21829494833946228,0.05898549407720566},{0.07714559137821198,0.06675694137811661,0.1565781682729721,-0.014268605038523674,0.4690706133842468,-0.22250445187091827,0.05648430809378624,0.08506428450345993,-0.24456819891929626,0.2742476165294647},{0.19112835824489594,0.03843649476766586,-1.5271005630493164,0.10499543696641922,-0.11884204298257828,0.04597312957048416,0.2691914737224579,-0.3928590416908264,-0.3184168338775635,-0.3003704845905304},{-0.11334618926048279,0.04797245189547539,0.11792454123497009,0.058963626623153687,-0.10575210303068161,-0.2603026330471039,-0.04755990579724312,-0.0862654447555542,0.3904098570346832,0.014120278880000114},{-0.21709203720092773,0.22924043238162994,-0.01781330071389675,0.004191843792796135,-0.03473159670829773,0.04772822558879852,-0.15076704323291779,0.14815811812877655,0.16289971768856049,0.22694534063339233},{-0.0016411120304837823,0.0951610580086708,0.02459094114601612,0.048712108284235,-0.09901710599660873,0.5164135694503784,0.010594015009701252,-0.032439276576042175,0.10787766426801682,0.35478609800338745},{-0.24597202241420746,0.1488151252269745,-0.2890905439853668,-0.04230817034840584,-0.19235365092754364,-0.22309327125549316,-0.017057647928595543,0.1353762298822403,0.034303221851587296,-0.18178506195545197}}};
		const float b_layer_3[10] = {0.1373230665922165,0.28476405143737793,0.026242809370160103,-0.08205637335777283,0.02922653779387474,0.0570145808160305,-0.051169805228710175,0.0670604258775711,0.07416098564863205,0.26192691922187805};

		// Fill with biases for layer_3
		for (int i = 0; i < 10; i++) {
			for (int l = 240; l < L; l++) {
				x_odd[i][l] = b_layer_3[i];
			}
		}

		// Apply main filter for layer_3
		// x_odd[:,240:] = sum(w[k]@x_even[:,240-(1-k)*16:L-(1-k)*16] for k in w.shape[0])
		for (int k = 0; k < 2; k++) {
			int offset = (1-k)*16;
			cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 10, L-240, 10, 1.0, &w_layer_3[k][0][0], 10, &x_even[0][240-offset], MAX_L, 1.0, &x_odd[0][240], MAX_L);
		}


		// Rectified Linear Unit (ReLU)
		for (int i = 0; i < 10; i++) {
			for (int l = 240; l < L; l++) {
				x_odd[i][l] = x_odd[i][l] > 0 ? x_odd[i][l] : 0;
			}
		}


		// auto-generated code for layer layer_4: Conv1d(10, 10, kernel_size=(2,), stride=(1,), dilation=(16,))
		const float w_layer_4[2][10][10] = {{{0.46552157402038574,0.21194888651371002,0.14197610318660736,0.1455668956041336,0.18518446385860443,-0.046199820935726166,-0.02042362093925476,-0.19545318186283112,0.35057196021080017,-0.023983994498848915},{0.478774756193161,-0.2827344834804535,0.16101005673408508,0.11755133420228958,-0.3704077899456024,-0.618747889995575,0.2602670192718506,0.21091794967651367,0.10880668461322784,-0.17388038337230682},{0.2742176055908203,0.0892694741487503,0.3341706097126007,-0.24132607877254486,-0.15571606159210205,0.29372015595436096,0.4620782434940338,-0.17242516577243805,0.003505345666781068,-0.1287994533777237},{0.2293257862329483,-0.32750123739242554,0.25844475626945496,-0.11663952469825745,0.0016799725126475096,0.6360517740249634,0.06136144697666168,-0.2663581073284149,-0.03216724470257759,0.2212352305650711},{-0.08704430609941483,0.023414792492985725,-0.18404623866081238,0.2649088203907013,0.24163560569286346,-0.48590072989463806,-0.10551605373620987,0.3028565049171448,-0.2493569403886795,0.0022393548861145973},{-0.24414831399917603,-0.2995133697986603,0.14638909697532654,-0.4503882825374603,0.37723129987716675,-0.479857861995697,0.3072872757911682,-0.06687723845243454,0.09535712748765945,0.27797144651412964},{0.15263783931732178,-0.15931814908981323,0.24094560742378235,-0.26913630962371826,0.4636684060096741,0.6343450546264648,0.13700734078884125,-0.02290808968245983,-0.14968562126159668,0.07676642388105392},{0.12632592022418976,-0.15582001209259033,0.4815678298473358,-0.10583049803972244,0.09504007548093796,0.3086048662662506,0.14728762209415436,0.10075272619724274,-0.40377530455589294,-0.06514822691679001},{-0.15870773792266846,-0.1993277370929718,-0.20885446667671204,0.24489155411720276,-0.5593108534812927,0.2623509168624878,-0.13434913754463196,0.11200619488954544,0.2686755061149597,-0.19516870379447937},{-0.14289811253547668,-0.17140492796897888,0.021288855001330376,-0.13988946378231049,-0.4247397184371948,-0.053426388651132584,0.1618025004863739,0.04954678192734718,0.3150691092014313,-0.051841020584106445}},{{0.07703357189893723,-0.5310734510421753,-0.23688313364982605,-0.23545515537261963,0.17070353031158447,-0.20329298079013824,-1.0137604475021362,0.34860214591026306,-0.2234974503517151,-0.22090192139148712},{0.0039831893518567085,-0.10671049356460571,0.07328037172555923,-0.08761202543973923,0.06680143624544144,-0.23699024319648743,0.33955273032188416,0.20857824385166168,-0.07034669071435928,-0.35331085324287415},{0.20853100717067719,-0.10879696160554886,-0.02321069873869419,-0.338792085647583,0.02059147320687771,0.3233303129673004,0.09308115392923355,-0.024947455152869225,-0.0008634144905954599,-0.15044045448303223},{0.03548493981361389,-0.06700122356414795,0.12865963578224182,-0.061892297118902206,-0.18545065820217133,0.1290011703968048,0.01889064349234104,0.07996752858161926,0.11316413432359695,-0.10571480542421341},{0.02168138697743416,0.35207808017730713,0.04151979833841324,0.31690311431884766,0.227952778339386,0.07555709779262543,0.28218960762023926,-0.013270506635308266,0.25109586119651794,0.2868407368659973},{-0.08144983649253845,-0.05707183852791786,0.24650274217128754,-0.22060193121433258,-0.08108110725879669,-0.19267363846302032,0.1628570854663849,-0.034847114235162735,0.15111050009727478,-0.01705891266465187},{0.2125931978225708,0.013234925456345081,0.14607353508472443,0.19458745419979095,0.26678240299224854,0.24057812988758087,0.14083300530910492,-0.12526550889015198,-0.06044010818004608,0.030383246019482613},{0.1746158003807068,0.22676780819892883,0.03546590730547905,-0.7984778881072998,0.029357217252254486,-0.013174510560929775,0.1708923727273941,-0.05225533992052078,0.21304132044315338,-0.03652988001704216},{-0.1436290293931961,-0.022041352465748787,0.1988295614719391,0.1545683741569519,0.10924815386533737,-0.07052203267812729,-0.07283523678779602,0.2605240046977997,0.017532262951135635,0.0694737583398819},{-0.11696306616067886,0.07393978536128998,0.1350066363811493,-0.18918567895889282,-0.07086075097322464,-0.05055606737732887,0.4268282353878021,0.103995181620121,-0.003625414101406932,-0.036506637930870056}}};
		const float b_layer_4[10] = {0.20225673913955688,-0.1576697826385498,0.04603081941604614,0.20328205823898315,-0.17620685696601868,0.04563884809613228,0.06397419422864914,-0.006418388336896896,0.11145228147506714,0.10307227820158005};

		// Fill with biases for layer_4
		for (int i = 0; i < 10; i++) {
			for (int l = 248; l < L; l++) {
				x_even[i][l] = b_layer_4[i];
			}
		}

		// Apply main filter for layer_4
		// x_even[:,248:] = sum(w[k]@x_odd[:,248-(1-k)*8:L-(1-k)*8] for k in w.shape[0])
		for (int k = 0; k < 2; k++) {
			int offset = (1-k)*8;
			cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 10, L-248, 10, 1.0, &w_layer_4[k][0][0], 10, &x_odd[0][248-offset], MAX_L, 1.0, &x_even[0][248], MAX_L);
		}


		// Rectified Linear Unit (ReLU)
		for (int i = 0; i < 10; i++) {
			for (int l = 248; l < L; l++) {
				x_even[i][l] = x_even[i][l] > 0 ? x_even[i][l] : 0;
			}
		}


		// auto-generated code for layer layer_5: Conv1d(10, 10, kernel_size=(2,), stride=(1,), dilation=(8,))
		const float w_layer_5[2][10][10] = {{{-0.15353821218013763,-0.11645576357841492,0.1313330978155136,0.4113609790802002,-0.12125741690397263,0.2048526406288147,0.19677503407001495,0.2800867259502411,-0.06331293284893036,0.2119269073009491},{0.06064160168170929,-0.058940887451171875,0.05454075708985329,-0.12145631015300751,-0.04936734214425087,-0.08338277041912079,0.02157391980290413,-0.010794999077916145,-0.08108282089233398,-0.07550006359815598},{0.14352110028266907,0.4091731607913971,-0.08158588409423828,0.04171152785420418,-0.12082692980766296,-0.002544313669204712,-0.22819600999355316,-0.20117691159248352,0.3704049289226532,0.19833391904830933},{0.5355790853500366,-0.17780451476573944,0.07558000087738037,0.15942677855491638,-0.47408199310302734,-0.3348296582698822,0.015320145525038242,-0.19213378429412842,-0.201018825173378,-0.3131237030029297},{-0.01938692480325699,0.40758705139160156,-0.11191914975643158,0.03825198858976364,-0.3890630304813385,0.08785709738731384,-0.18683932721614838,-0.4032337963581085,0.5270704627037048,0.2740892171859741},{0.005937367212027311,0.11200743168592453,-0.03528949245810509,0.10612746328115463,0.03498367965221405,0.1118539497256279,-0.08272796869277954,-0.06185552477836609,-0.08287648111581802,-0.09888500720262527},{0.2827551066875458,0.1204206645488739,0.24054184556007385,-0.3121243119239807,-0.2550819218158722,-0.22820121049880981,-0.3450988829135895,-0.035633500665426254,0.31321239471435547,0.24345871806144714},{-0.3917155861854553,0.6352760791778564,0.019515356048941612,0.010865463875234127,0.19775870442390442,0.1701793670654297,-0.13391977548599243,0.048621173948049545,0.13390880823135376,0.09855858981609344},{0.5671830177307129,-0.021329935640096664,0.17762018740177155,-0.024991720914840698,-0.03027159720659256,0.045650042593479156,-0.0019988033454865217,-0.10768473893404007,0.2700110673904419,-0.19756370782852173},{-0.3138495981693268,-0.19284173846244812,-0.08197726309299469,0.1417214423418045,0.1279977262020111,0.09442035853862762,0.22591933608055115,0.18853230774402618,-0.046476755291223526,0.006853070575743914}},{{0.04337798431515694,-0.0399036705493927,0.319526344537735,0.25738537311553955,-0.10640423744916916,0.26405301690101624,0.08543255925178528,-0.019308684393763542,-0.0075508709996938705,0.0721602588891983},{-0.029341625049710274,-0.06468188017606735,-0.11115708202123642,-0.06524334847927094,0.07583553344011307,-0.12831325829029083,-0.04574942588806152,-0.17306789755821228,0.0231360774487257,-0.09004835039377213},{-0.5964379906654358,-0.004468795843422413,0.02718302607536316,-0.05510399490594864,0.2920953929424286,0.0475456640124321,0.04727388918399811,0.2694942355155945,-0.015241198241710663,0.0352788046002388},{0.1126154363155365,-0.32276949286460876,0.10827977955341339,-0.14796414971351624,0.07325749844312668,-0.30832308530807495,0.002680545672774315,-0.31938275694847107,0.019425585865974426,0.03489056974649429},{-0.1044645607471466,-0.025988876819610596,-0.195063978433609,0.06524483859539032,0.1453440636396408,0.11738912761211395,0.15230043232440948,0.14593055844306946,0.1451253741979599,0.05438573658466339},{-0.0038393016438931227,-0.061730243265628815,-0.046481043100357056,-0.031206544488668442,0.017983190715312958,-0.09336787462234497,-0.012207232415676117,-0.10760601609945297,-0.046735115349292755,-0.10681305825710297},{0.3393082022666931,0.08026298135519028,-0.05431691184639931,0.09195242077112198,-0.3025329113006592,0.05707632377743721,-0.2674112915992737,0.09847086668014526,0.34172523021698,-0.035923589020967484},{0.5573782920837402,-0.09757663309574127,-0.166683167219162,0.03174018859863281,0.02415291592478752,0.09242338687181473,-0.1431409865617752,0.05312610790133476,0.03336797654628754,0.12210175395011902},{0.38949692249298096,-0.18380017578601837,-0.17903809249401093,0.18910741806030273,-0.1642688661813736,0.06537313759326935,0.058995526283979416,-0.01743992418050766,0.326092928647995,-0.15465351939201355},{0.31181490421295166,-0.06336812674999237,0.0748458206653595,-0.07965756952762604,-0.03786603733897209,-0.04670469090342522,0.03300922363996506,-0.13634751737117767,0.017279520630836487,0.0699489414691925}}};
		const float b_layer_5[10] = {0.04880985617637634,-0.10044728219509125,0.10755426436662674,0.02989530935883522,-0.002178418217226863,-0.06523331999778748,0.09756612777709961,-0.08305095881223679,-0.008134874515235424,-0.013375157490372658};

		// Fill with biases for layer_5
		for (int i = 0; i < 10; i++) {
			for (int l = 252; l < L; l++) {
				x_odd[i][l] = b_layer_5[i];
			}
		}

		// Apply main filter for layer_5
		// x_odd[:,252:] = sum(w[k]@x_even[:,252-(1-k)*4:L-(1-k)*4] for k in w.shape[0])
		for (int k = 0; k < 2; k++) {
			int offset = (1-k)*4;
			cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 10, L-252, 10, 1.0, &w_layer_5[k][0][0], 10, &x_even[0][252-offset], MAX_L, 1.0, &x_odd[0][252], MAX_L);
		}


		// Rectified Linear Unit (ReLU)
		for (int i = 0; i < 10; i++) {
			for (int l = 252; l < L; l++) {
				x_odd[i][l] = x_odd[i][l] > 0 ? x_odd[i][l] : 0;
			}
		}


		// auto-generated code for layer layer_6: Conv1d(10, 10, kernel_size=(2,), stride=(1,), dilation=(4,))
		const float w_layer_6[2][10][10] = {{{0.3159586191177368,0.028087731450796127,0.09601785987615585,0.24009625613689423,-0.6389554738998413,0.055451832711696625,0.011502955108880997,0.244308203458786,-0.16849617660045624,0.049052271991968155},{-0.009758679196238518,0.019372355192899704,0.34571000933647156,-0.388638973236084,0.4423229396343231,0.04643097147345543,0.5167791247367859,0.18857616186141968,0.20951683819293976,0.019855527207255363},{0.3323546051979065,0.03674301132559776,-0.10130606591701508,0.4048195481300354,-0.07201730459928513,-0.021045582368969917,-0.12658587098121643,-0.04828870669007301,-0.15836428105831146,0.12470252066850662},{-0.05464053526520729,-0.10353252291679382,0.2617296278476715,0.43427330255508423,0.08067547529935837,0.031018640846014023,-0.11211509257555008,-0.2443164438009262,0.14408239722251892,0.18584713339805603},{-0.06019962579011917,-0.11309897154569626,0.17033179104328156,0.003523187944665551,0.29772093892097473,0.06922722607851028,0.05554778873920441,0.0797073096036911,0.23332509398460388,0.05298212915658951},{0.18918155133724213,0.03512824699282646,-0.061885248869657516,-0.08839443325996399,-0.3707670271396637,-0.04796436429023743,0.25609633326530457,-0.0909772664308548,0.1560259759426117,-0.04804268479347229},{-0.45828017592430115,0.018516279757022858,-0.016931971535086632,-0.4149314761161804,-0.17497850954532623,-0.03299248218536377,0.2231362909078598,-0.35658958554267883,0.4668530523777008,-0.5110912919044495},{0.010646689683198929,0.04864773154258728,0.26397040486335754,0.3687745928764343,-0.7861952185630798,-0.021452980116009712,-0.25600090622901917,-0.2738022804260254,-0.39846232533454895,-0.009680185467004776},{0.03651830554008484,-0.0420752614736557,-0.23178914189338684,0.36519742012023926,-0.813256025314331,0.07546517252922058,-0.019875289872288704,0.24076063930988312,0.22583040595054626,-0.08473193645477295},{0.2197534292936325,-0.10250072926282883,0.011042381636798382,0.09542055428028107,0.2309933602809906,-0.06471671909093857,-0.1772613823413849,-0.14083629846572876,-0.7847999334335327,0.09222356230020523}},{{-0.10098431259393692,-0.05635766685009003,-0.09646973758935928,-0.25286340713500977,-0.20644839107990265,0.07031109929084778,0.31552040576934814,0.4097139835357666,0.1059444472193718,0.028866220265626907},{0.06635094434022903,-0.02866443432867527,0.5972071886062622,-0.062266234308481216,0.0007707216427661479,0.026507142931222916,-0.35172998905181885,-0.25441762804985046,-0.3441235423088074,-0.1168115958571434},{0.22030530869960785,-0.08401156961917877,-0.3429565131664276,-0.08973588049411774,0.3188285827636719,0.0453471802175045,-0.04187142476439476,0.2752821743488312,0.02592034451663494,0.007136296946555376},{-0.010910673066973686,-0.05607134476304054,0.18084269762039185,-0.36830762028694153,0.03979703038930893,0.026732787489891052,0.06960264593362808,-0.33590686321258545,-0.07706783711910248,0.09459640830755234},{0.10224081575870514,-0.050268933176994324,0.35256609320640564,-0.00010174418275710195,0.11871717125177383,-0.08472581207752228,-0.004847071599215269,-0.01921454258263111,-0.029578041285276413,0.25684744119644165},{0.17616119980812073,-0.02986765466630459,-0.3490809500217438,-0.2658715844154358,0.049634840339422226,0.024743665009737015,0.01769113913178444,-0.10345222800970078,0.05082201585173607,-0.04793434962630272},{-0.1504845768213272,0.0013603874249383807,0.14698553085327148,-0.18451669812202454,-0.11718674004077911,0.05203089490532875,0.028116850182414055,0.220645472407341,0.22956597805023193,0.20506824553012848},{0.08940575271844864,0.060394130647182465,-0.7334327101707458,0.03209421783685684,0.5551891326904297,-0.11785268038511276,0.15453322231769562,0.055244531482458115,-0.16428376734256744,0.10271449387073517},{-0.34210312366485596,-0.037700213491916656,0.2680649161338806,-0.2396644651889801,0.14496555924415588,-0.09227817505598068,-0.0015036722179502249,-0.07516389340162277,-0.011896704323589802,-0.2454252541065216},{0.14956746995449066,0.005142692010849714,0.013386794365942478,0.45359164476394653,0.25977352261543274,0.042852118611335754,-0.1104736477136612,-0.003460508305579424,-0.14184249937534332,0.07552411407232285}}};
		const float b_layer_6[10] = {-0.01679939404129982,-0.048216138035058975,0.1402178406715393,-0.13354559242725372,-0.1455029845237732,0.06406427174806595,0.3276936411857605,0.07851606607437134,-0.0742180347442627,0.07958486676216125};

		// Fill with biases for layer_6
		for (int i = 0; i < 10; i++) {
			for (int l = 254; l < L; l++) {
				x_even[i][l] = b_layer_6[i];
			}
		}

		// Apply main filter for layer_6
		// x_even[:,254:] = sum(w[k]@x_odd[:,254-(1-k)*2:L-(1-k)*2] for k in w.shape[0])
		for (int k = 0; k < 2; k++) {
			int offset = (1-k)*2;
			cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 10, L-254, 10, 1.0, &w_layer_6[k][0][0], 10, &x_odd[0][254-offset], MAX_L, 1.0, &x_even[0][254], MAX_L);
		}


		// Rectified Linear Unit (ReLU)
		for (int i = 0; i < 10; i++) {
			for (int l = 254; l < L; l++) {
				x_even[i][l] = x_even[i][l] > 0 ? x_even[i][l] : 0;
			}
		}


		// auto-generated code for layer layer_7: Conv1d(10, 10, kernel_size=(2,), stride=(1,), dilation=(2,))
		const float w_layer_7[2][10][10] = {{{-0.21898029744625092,-0.08479995280504227,-0.16699615120887756,0.33920374512672424,0.46750250458717346,-0.29016759991645813,0.10294556617736816,-0.026946913450956345,0.11183108389377594,-0.5277619957923889},{0.10764311999082565,-0.5323662161827087,0.23558223247528076,0.2965855896472931,-0.2841344177722931,0.1847924143075943,0.020943596959114075,0.5160305500030518,0.18396084010601044,-0.009084353223443031},{0.04098157957196236,0.18888476490974426,0.19894081354141235,0.2532956004142761,-0.06799715757369995,0.10378099232912064,0.13490279018878937,0.2662052810192108,0.3023083806037903,-0.29112619161605835},{0.2242719531059265,-0.3878766894340515,0.2843858599662781,0.25744524598121643,-0.08452665060758591,0.17414690554141998,-0.06073860079050064,0.46390607953071594,0.24117493629455566,0.23260259628295898},{-0.1470934897661209,0.20337237417697906,0.08911444246768951,0.0871802270412445,0.13804376125335693,-0.4418220818042755,-0.3276462256908417,-0.0979599580168724,0.09055616706609726,0.28000035881996155},{-0.04285753145813942,-0.08764719218015671,-0.07537039369344711,0.06564762443304062,-0.08871398866176605,0.02978263422846794,-0.003806528402492404,-0.10494831949472427,0.0246108490973711,0.04123633727431297},{0.07690989226102829,0.026126191020011902,0.06013694405555725,-0.10211831331253052,0.2074831873178482,-0.08697009086608887,-0.25683361291885376,0.19565340876579285,0.03404711186885834,0.1396133005619049},{0.18601113557815552,-0.13036291301250458,0.23648059368133545,0.04873717576265335,-0.2664010226726532,-0.00800179224461317,-0.0624929741024971,0.36263054609298706,0.28890368342399597,0.3084547221660614},{-0.3789277672767639,-0.17261873185634613,-0.20422789454460144,-0.23507148027420044,-0.05216524377465248,-0.1664332002401352,0.3846266269683838,-2.8874611854553223,-0.5615204572677612,0.18179605901241302},{-0.0675397515296936,0.31983351707458496,-0.16562257707118988,-0.26606592535972595,0.06866756826639175,0.0935167744755745,0.4903941750526428,-0.36800169944763184,-0.23189350962638855,-0.16312192380428314}},{{0.03220391646027565,-0.4290158748626709,0.05605649948120117,-0.33089351654052734,0.5168471932411194,-0.046849656850099564,0.12240799516439438,1.1271218061447144,-0.019891181960701942,0.0268043652176857},{0.04829641431570053,-0.570222795009613,0.16453109681606293,-0.19869494438171387,-0.3147125244140625,0.07173027098178864,0.18711735308170319,0.26469072699546814,0.03166276589035988,0.03177626430988312},{0.43719255924224854,-0.31205976009368896,0.1399286985397339,0.07319626212120056,-0.1435430496931076,0.06009508669376373,0.1452620029449463,-0.260009229183197,-0.049166519194841385,0.0837632417678833},{0.021876035258173943,-0.3471660614013672,0.21242280304431915,-0.15621180832386017,-0.14479364454746246,0.03699522465467453,0.3188178837299347,0.38485318422317505,-0.027860794216394424,-0.01830650120973587},{-0.26308488845825195,0.22353355586528778,-0.008087700232863426,0.17059087753295898,0.12144482880830765,-0.5364267826080322,0.17049916088581085,0.6052056550979614,-0.6645973920822144,0.24016860127449036},{0.04334726557135582,0.10021328181028366,0.014973766170442104,0.09115161001682281,-0.11490554362535477,0.06437107175588608,-0.10740550607442856,-0.05656619742512703,0.11680060625076294,0.09015349298715591},{0.22372785210609436,-0.1693653017282486,0.05774160474538803,-0.1111041009426117,-0.003978407941758633,-0.043572671711444855,-0.7355734705924988,-0.10228640586137772,0.09169001132249832,0.2702885568141937},{-0.11806438118219376,-0.11972212791442871,0.19417846202850342,-0.2856539487838745,-0.05308554694056511,0.1711796522140503,0.31519725918769836,0.424603134393692,0.03447258099913597,0.08382319658994675},{-0.3934900760650635,-0.0025734142400324345,-0.26954707503318787,0.16106382012367249,0.007132648956030607,-0.2609112858772278,0.20630992949008942,-3.8169569969177246,0.0029662097804248333,-0.23970413208007812},{-0.02158297784626484,0.3359262943267822,-0.15647761523723602,0.08282740414142609,0.062421899288892746,-0.033114004880189896,0.19064763188362122,0.31334057450294495,-0.13175663352012634,0.0027346673887223005}}};
		const float b_layer_7[10] = {-0.05369577929377556,0.21828237175941467,-0.3061845600605011,0.0985255017876625,-0.14085525274276733,-0.11269538849592209,-0.39096447825431824,-0.012943681329488754,0.09916726499795914,0.22125856578350067};

		// Fill with biases for layer_7
		for (int i = 0; i < 10; i++) {
			for (int l = 255; l < L; l++) {
				x_odd[i][l] = b_layer_7[i];
			}
		}

		// Apply main filter for layer_7
		// x_odd[:,255:] = sum(w[k]@x_even[:,255-(1-k)*1:L-(1-k)*1] for k in w.shape[0])
		for (int k = 0; k < 2; k++) {
			int offset = (1-k)*1;
			cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 10, L-255, 10, 1.0, &w_layer_7[k][0][0], 10, &x_even[0][255-offset], MAX_L, 1.0, &x_odd[0][255], MAX_L);
		}


		// Rectified Linear Unit (ReLU)
		for (int i = 0; i < 10; i++) {
			for (int l = 255; l < L; l++) {
				x_odd[i][l] = x_odd[i][l] > 0 ? x_odd[i][l] : 0;
			}
		}


		// auto-generated code for layer layer_8: Conv1d(10, 1, kernel_size=(1,), stride=(1,))
		const float w_layer_8[1][1][10] = {{{-0.2995445430278778,-0.33478909730911255,0.38215216994285583,-0.3252429962158203,-0.29325172305107117,0.05764166638255119,0.46560922265052795,-0.2037924826145172,0.30489224195480347,0.3085665702819824}}};
		const float b_layer_8[1] = {0.13906314969062805};

		// Fill with biases for layer_8
		for (int i = 0; i < 1; i++) {
			for (int l = 255; l < L; l++) {
				x_even[i][l] = b_layer_8[i];
			}
		}

		// Apply main filter for layer_8
		// x_even[:,255:] = sum(w[k]@x_odd[:,255-(0-k)*0:L-(0-k)*0] for k in w.shape[0])
		for (int k = 0; k < 1; k++) {
			int offset = (0-k)*0;
			cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 1, L-255, 10, 1.0, &w_layer_8[k][0][0], 10, &x_odd[0][255-offset], MAX_L, 1.0, &x_even[0][255], MAX_L);
		}


		// Copy result back to y
		for (int l = 255; l < L; l++) {
			y[l] = x_even[0][l];
		}
	}
};
